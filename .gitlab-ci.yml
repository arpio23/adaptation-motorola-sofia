# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

variables:
  GIT_SUBMODULE_STRATEGY: recursive

image: debian:bookworm

stages:          # List of stages for jobs, and their order of execution
  - build

before_script:
  - dpkg --add-architecture arm64
  - apt update && apt install -y --allow-downgrades devscripts equivs crossbuild-essential-arm64 curl
  
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - mkdir build
    - mk-build-deps --host-arch arm64 --install --tool='apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes' debian/control
    - rm adaptation-motorola-sofia*.deb
    - dpkg-buildpackage -us -uc -b --host-arch arm64
    - mv ../*.deb build/
    - echo "Compile complete."

# The files which are to be made available in GitLab
  artifacts:
    paths:
      - build/*

